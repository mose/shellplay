#!/usr/bin/env ruby

require 'paint'
require 'json'
require 'open3'


lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'shellplay/session'

session = Shellplay::Session.new
session.import(ARGV[1])

scenario = File.expand_path("../scenario.json", __FILE__)
content = JSON.parse(IO.read(scenario))

continue = true
sleeptime = 1.0/24.0

counter = 1
def usage
  puts "\nCommands: "
  puts "  h,?        show help"
  puts "  s          list screens"
  puts "  s#         jump to screen #"
  puts "  <enter>    jump to next screen"
  puts "  p          jump to previous screen"
  puts "  <command>  execute a subcommand in a bash -l -c"
  puts "  x,q        quit"
  puts
end

def shownext

end

while continue do
  printf session.config.prompt
  command = STDIN.gets.strip
  case command
  when /^(?:q|x)$/
    puts "\nPrez ended.\n"
    continue = false
  when /^(?:\?|h)$/
    usage
  when /^s$/
    content['content'].map { |c| c['command'] }.each_with_index do |l, i|
      printf("   s%-3s %s\n", i, l)
    end
  when /s([0-9]+)/
    puts "going to screen #{$1}"
  when ''
    shownext
  else
    Open3.popen3("bash","-l","-c",command.strip) do |i, o, e, t|
      o.read.split("\n").each do |line|
        puts line
        sleep sleeptime
      end
      e.read.split("\n").each do |line|
        puts Paint[line, :red]
      end
    end
  end
end
